<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Research Notes on My Notes</title><link>https://peppyhare.github.io/r/notes/research/</link><description>Recent content in Research Notes on My Notes</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://peppyhare.github.io/r/notes/research/index.xml" rel="self" type="application/rss+xml"/><item><title>Electrodynamic Dory-Guest-Harris Instability</title><link>https://peppyhare.github.io/r/notes/research/dgh-datta/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://peppyhare.github.io/r/notes/research/dgh-datta/</guid><description>\[\] Pretty much entirely based on this paper: Electromagnetic extension of the Dory– Guest–Harris instability as a benchmark for Vlasov–Maxwell continuum kinetic simulations of magnetized plasmas
Closed Integral Form of Dispersion Relation # Iman&amp;rsquo;s done a great job deriving a closed-form integral representation of the dispersion relation for the Dory-Guest-Harris instability. The trick to computing solutions to the dispersion relation is in getting all of the the normalization correct and computing the correct quadrature across both integrals (over $v_\perp$ and $\theta$).</description></item><item><title>WARPXM 101 - Getting Started</title><link>https://peppyhare.github.io/r/notes/research/warpxm-101/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://peppyhare.github.io/r/notes/research/warpxm-101/</guid><description>What is WARPXM # WARPXM is an extensible framework for solving hyperbolic PDE systems. By &amp;ldquo;framework&amp;rdquo; we mean that it is not a single tool for solving a particular type of system, but rather it contains a number of applications, solvers, and other tools which can be combined to create a wide variety of models. By &amp;ldquo;extensible,&amp;rdquo; we mean the framework allows for defining additional components which can be mixed in with the existing solvers and applications.</description></item><item><title>WARPXM 102 - Code Structure</title><link>https://peppyhare.github.io/r/notes/research/warpxm-102/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://peppyhare.github.io/r/notes/research/warpxm-102/</guid><description>\[\] What Happens When You Press Go? # Following the sequence of events that take place in a WARPXM simulation by stepping through in the debugger has helped me to understand the code structure and concepts. I would highly recommend going through the process at least once. I have tried to explain what happens in plain English in the hopes that it will help me (and maybe someone else) to better understand how things are structured and what to expect when working with WARPXM.</description></item></channel></rss>